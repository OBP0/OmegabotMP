// В данном примере реализовано 4 аналоговых датчиков с прерыванием WDT.
// К четырём аналоговым портам подключаются ИК датчики расстояния

uint8_t IR_pin[] = {A0, A1, A2, A3}; // Массив адресов аналоговых портов
volatile int sensor[] = {0,0,0,0};   // Массив отфильтрованных значений показаний АЦП
  
ISR(WDT_vect) { // Функция прерывания, в которой будет происходить чтение АЦП и фильтрация данных
  for(uint8_t i = 0; i < 4; i++){ // В цикле проверяем каждый пин и делаем усреднение показаний
    sensor[i] += (analogRead(IR_pin[i]) - sensor[i]) >> 3;
  }
}

float Read_IR(int measur){   // Функция вычисления расстояния ИК дальномера из показаний АЦП
  return 29.988 * pow(measur / 204.8, -1.173);;
}

void setup() {
  Serial.begin(9600);

  cli();                                        // Запрт прерываний
  asm("wdr");                                   // Сбрасываем WDT
  WDTCSR = (1 << WDCE) | (1 << WDE);            // Разрешить изменение значения предделителя WDT
  WDTCSR = 0 | (1 << WDP1) | (1 << WDIE );      // Запрещаем RESET и устанавливаем период ≈64 мсек (≈16 Гц).
  sei();                                        // Разрешение прерываний
}

void loop() {
  // Раз в секунду проводим вычисления расстояния на каждом датчике и выводим данные в консоль 
  delay(1000);
  Serial.print("Показания дальномера 1: ");
  Serial.println(Read_IR(sensor[0]));
  Serial.print("Показания дальномера 2: ");
  Serial.println(Read_IR(sensor[1]));
  Serial.print("Показания дальномера 3: ");
  Serial.println(Read_IR(sensor[2]));
  Serial.print("Показания дальномера 4: ");
  Serial.println(Read_IR(sensor[3]));
  Serial.println();
}